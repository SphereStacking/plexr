#!/bin/bash
# Pre-commit hook for Plexr project

set -e

echo "🔍 Running pre-commit checks..."

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get list of staged Go files
STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.go$' || true)

if [ -z "$STAGED_GO_FILES" ]; then
    echo "No Go files to check"
    exit 0
fi

# Check if we have the tools
if ! command -v gofmt &> /dev/null; then
    echo -e "${RED}❌ gofmt is not installed${NC}"
    exit 1
fi

# Format check
echo "📐 Checking code formatting..."
UNFORMATTED=$(gofmt -l $STAGED_GO_FILES)
if [ -n "$UNFORMATTED" ]; then
    echo -e "${RED}❌ The following files are not properly formatted:${NC}"
    echo "$UNFORMATTED"
    echo -e "${YELLOW}Run 'make fmt' to fix formatting${NC}"
    exit 1
fi

# goimports check
if command -v goimports &> /dev/null; then
    echo "📦 Checking imports..."
    NEEDS_IMPORTS=$(goimports -l $STAGED_GO_FILES)
    if [ -n "$NEEDS_IMPORTS" ]; then
        echo -e "${RED}❌ The following files have import issues:${NC}"
        echo "$NEEDS_IMPORTS"
        echo -e "${YELLOW}Run 'make fmt' to fix imports${NC}"
        exit 1
    fi
fi

# Run go mod tidy check
echo "📋 Checking go.mod and go.sum..."
cp go.mod go.mod.backup
cp go.sum go.sum.backup
go mod tidy
if ! diff -q go.mod go.mod.backup >/dev/null || ! diff -q go.sum go.sum.backup >/dev/null; then
    mv go.mod.backup go.mod
    mv go.sum.backup go.sum
    echo -e "${RED}❌ go.mod or go.sum is not tidy${NC}"
    echo -e "${YELLOW}Run 'go mod tidy' and stage the changes${NC}"
    exit 1
fi
rm go.mod.backup go.sum.backup

# Lint check (if golangci-lint is available)
if [ -f .tools/golangci-lint ] || command -v golangci-lint &> /dev/null; then
    echo "🔍 Running linters..."
    if ! make lint; then
        echo -e "${RED}❌ Linting failed${NC}"
        echo -e "${YELLOW}Fix the issues above before committing${NC}"
        exit 1
    fi
else
    echo -e "${YELLOW}⚠️  golangci-lint not found, skipping lint check${NC}"
    echo -e "${YELLOW}   Run 'make tools' to install it${NC}"
fi

# Build check
echo "🔨 Checking if code builds..."
if ! go build -o /dev/null ./...; then
    echo -e "${RED}❌ Build failed${NC}"
    exit 1
fi

# Run tests for changed packages
echo "🧪 Running tests for changed packages..."
PACKAGES=$(echo "$STAGED_GO_FILES" | xargs -n1 dirname | sort -u | sed 's|^|./|')
if ! go test -short -timeout 30s $PACKAGES; then
    echo -e "${RED}❌ Tests failed${NC}"
    exit 1
fi

echo -e "${GREEN}✅ All pre-commit checks passed!${NC}"